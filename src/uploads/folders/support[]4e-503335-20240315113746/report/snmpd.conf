###############################################################################
# Access Control
###############################################################################

# YOU SHOULD CHANGE THE "COMMUNITY" TOKEN BELOW TO A NEW KEYWORD ONLY
# KNOWN AT YOUR SITE.  YOU *MUST* CHANGE THE NETWORK TOKEN BELOW TO
# SOMETHING REFLECTING YOUR LOCAL NETWORK ADDRESS SPACE.

# By far, the most common question I get about the agent is "why won't
# it work?", when really it should be "how do I configure the agent to
# allow me to access it?"
#
# By default, the agent responds to the "public" community for read
# only access, if run out of the box without any configuration file in 
# place.  The following examples show you other ways of configuring
# the agent so that you can change the community names, and give
# yourself write access as well.
#
# The following lines change the access permissions of the agent so
# that the COMMUNITY string provides read-only access to your entire
# NETWORK (EG: 10.10.10.0/24), and read/write access to only the
# localhost (127.0.0.1, not its real ipaddress).
#
# For more information, read the FAQ as well as the snmpd.conf(5)
# manual page.

####
# First, map the community name (COMMUNITY) into a security name
# (local and mynetwork, depending on where the request is coming
# from):

#       sec.name  source           community
#com2sec local     127.0.0.1        public
#com2sec mynetwork default          public

####
# Second, map the security names into group names:

#             	sec.model  sec.name
group MyRWGroup	v1         local
group MyRWGroup	v2c        local
group MyRWGroup	usm        local
group MyRWGroup v1         mynetwork
group MyRWGroup v2c        mynetwork
group MyRWGroup usm        mynetwork

####
# Third, create a view for us to let the groups have rights to:

#           incl/excl subtree                          mask
view all    included  .1                               80
#view all    excluded  .1.3.6.1.4.1.8072   
#view all    excluded  .1.3.6.1.4.1.2021               

####
# Finally, grant the 2 groups access to the 1 view with different
# write permissions:

#                context sec.model sec.level match  read   write  notif
access MyROGroup ""      any       noauth    exact  all    none   none
access MyRWGroup ""      any       noauth    exact  all    all    none

#envivio-begin

master agentx
agentXSocket tcp:localhost:705

com2sec EnvivioROSNMPCommunity default public_!envivio!
com2sec EnvivioRWSNMPCommunity default private_!envivio!

group MyROGroup v1         EnvivioROSNMPCommunity
group MyROGroup v2c        EnvivioROSNMPCommunity
group MyROGroup usm        EnvivioROSNMPCommunity
group MyRWGroup v1         EnvivioRWSNMPCommunity
group MyRWGroup v2c        EnvivioRWSNMPCommunity
group MyRWGroup usm        EnvivioRWSNMPCommunity

##### START OF DESTINATIONS (do not edit manually) ######
#trap2sink 127.0.0.1
#trap2sink 127.0.0.1
#trap2sink 127.0.0.1
#trap2sink 127.0.0.1
#trap2sink 127.0.0.1
#trap2sink 127.0.0.1
#trap2sink 127.0.0.1
#trap2sink 127.0.0.1
##### END OF DESTINATIONS ######

#envivio-end

