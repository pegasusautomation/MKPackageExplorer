metadata:
  annotations:
    deployment.kubernetes.io/revision: '1'
    meta.helm.sh/release-name: mkc
    meta.helm.sh/release-namespace: mediakind
  creationTimestamp: '2023-12-14T10:09:17Z'
  generation: 1
  labels:
    app.kubernetes.io/component: alarm
    app.kubernetes.io/instance: mkc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: alarm-legacy
    app.kubernetes.io/part-of: mkc
    app.kubernetes.io/version: 1.103.5
    helm.sh/chart: alarm-1.103.5
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:meta.helm.sh/release-name: {}
          f:meta.helm.sh/release-namespace: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/component: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/name: {}
          f:app.kubernetes.io/part-of: {}
          f:app.kubernetes.io/version: {}
          f:helm.sh/chart: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app.kubernetes.io/component: {}
              f:app.kubernetes.io/instance: {}
              f:app.kubernetes.io/managed-by: {}
              f:app.kubernetes.io/name: {}
              f:app.kubernetes.io/part-of: {}
              f:app.kubernetes.io/version: {}
              f:helm.sh/chart: {}
          f:spec:
            f:containers:
              k:{"name":"alarm-legacy-collector"}:
                .: {}
                f:args: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:securityContext:
                  .: {}
                  f:allowPrivilegeEscalation: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/opt/ericsson/alarm/etc/alarm-api.ini"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
                  k:{"mountPath":"/opt/ericsson/alarm/etc/alarm-collector-logging.json"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
              k:{"name":"alarm-legacy-daemon"}:
                .: {}
                f:args: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:securityContext:
                  .: {}
                  f:allowPrivilegeEscalation: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/opt/ericsson/alarm/etc/alarm-api.ini"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
                  k:{"mountPath":"/opt/ericsson/alarm/etc/alarm-daemon-logging.json"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
            f:dnsPolicy: {}
            f:enableServiceLinks: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext:
              .: {}
              f:fsGroup: {}
              f:runAsUser: {}
            f:terminationGracePeriodSeconds: {}
            f:volumes:
              .: {}
              k:{"name":"config"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
    manager: helm
    operation: Update
    time: '2023-12-14T10:09:17Z'
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: k3s
    operation: Update
    subresource: status
    time: '2024-01-30T10:39:57Z'
  name: alarm-legacy
  namespace: mediakind
  resourceVersion: '7479865'
  uid: 926f61cd-1044-48b6-8e82-623e31ad4001
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: mkc
      app.kubernetes.io/name: alarm-legacy
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: alarm
        app.kubernetes.io/instance: mkc
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: alarm-legacy
        app.kubernetes.io/part-of: mkc
        app.kubernetes.io/version: 1.103.5
        helm.sh/chart: alarm-1.103.5
    spec:
      containers:
      - args:
        - /src/mediakind/legacy/alarm/collector/collector.py
        - --conf
        - /opt/ericsson/alarm/etc/alarm-api.ini
        - --log
        - /opt/ericsson/alarm/etc/alarm-collector-logging.json
        image: packages.mediakind.com/mpd-docker/mediakind/alarm:1.103.5
        imagePullPolicy: IfNotPresent
        name: alarm-legacy-collector
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/ericsson/alarm/etc/alarm-api.ini
          name: config
          subPath: alarm-api.ini
        - mountPath: /opt/ericsson/alarm/etc/alarm-collector-logging.json
          name: config
          subPath: alarm-collector-logging.json
      - args:
        - /src/mediakind/legacy/alarm/daemon/app.py
        - --conf
        - /opt/ericsson/alarm/etc/alarm-api.ini
        - --log
        - /opt/ericsson/alarm/etc/alarm-daemon-logging.json
        image: packages.mediakind.com/mpd-docker/mediakind/alarm:1.103.5
        imagePullPolicy: IfNotPresent
        name: alarm-legacy-daemon
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/ericsson/alarm/etc/alarm-api.ini
          name: config
          subPath: alarm-api.ini
        - mountPath: /opt/ericsson/alarm/etc/alarm-daemon-logging.json
          name: config
          subPath: alarm-daemon-logging.json
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 2
        runAsUser: 2
      terminationGracePeriodSeconds: 0
      volumes:
      - configMap:
          defaultMode: 420
          name: alarm-config
        name: config
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: '2023-12-14T10:09:18Z'
    lastUpdateTime: '2023-12-14T10:09:34Z'
    message: ReplicaSet "alarm-legacy-587f58d9cb" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: 'True'
    type: Progressing
  - lastTransitionTime: '2024-01-30T10:39:57Z'
    lastUpdateTime: '2024-01-30T10:39:57Z'
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: 'True'
    type: Available
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
