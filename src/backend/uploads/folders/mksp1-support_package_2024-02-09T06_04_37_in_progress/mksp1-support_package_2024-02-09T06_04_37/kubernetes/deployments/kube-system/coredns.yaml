metadata:
  annotations:
    deployment.kubernetes.io/revision: '2'
    objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV0W/bxg/+V37gsxRbTdI6An4PnZ2tRVfPqJO+FEFBnyjr5tPxdndyYgT+3wdKsmO3brIOe7J8R/I+fvxIPgI6/Zl80GwhB3QuDNYZJLDStoAcJuQMb2qyERKoKWKBESF/BLSWI0bNNshfXvxJKgaKZ17zmcIYDZ1pHmgJAskP7/nekk+X6xXksDoPBzfrLPnfB22L/78tCrYvhrBYE+RQr1LFngob0uIQ+svOwaGSCKtmQWnYhEg1bBMwuCDTprgahRSd25kUNghNzYK8pUhBovUgxuxpMp0/82yFoYIczi8uMoWXV4th+WZ0+WpE2cWooGFWDrPLc3w1vBrhm9fDBQmQPnafHXQHPwAdHCmBHMiQiuzlu8aoqt+fy2YrntFjpOVGTDwbo+3y1hUYqQvxcGtxjdrgwhDk2TaBuHEC4NORrZxT7czO70A3z/K5PcCu2EbUlnyA/MsjoF/KB6SKbQkJDCiqQU/GQAgvtSG4S0DXuBREHq2qyA9q7b2Y7XXR/+bZ2dXZBfQOs8aYGRutNpDD+3LKceYpdNoxek2WQph5XrT5lKhN4+mm8hQqNgXk5wlUMbrfKMq9wyjVHVSEJlaQgGMfIR8NR8MEgqqoreS7m5uZMKWtjhrNhAxu5qTYFgHy18MEHHnNxf4oE+dGKQrh4OUsgahr4iY+GZ5Si0DomNwTO2tRXZ7vrXtLz5EVG8jhdiIIX3BJo3LHbjfjk25X2YFjTdFrFU443iXgCQv9rygXz80T49ko+6eMf0/4q5/g21PgxitqlW10rWPolF+zF0llb4YfNbSGfzUUulvlGrkaDut2uPamnaV0AqnG67gZs4300KaJxvD9zOu1NrSk66DQtDMY8hJNoAQUOlxoo6PuoGBRSNdMr2++/vJ+Ovk6v/70+f34Whql8OzkDo2Bu21H+h/WbD4xx1+1oX6c5NE3tE1gzaap6SM3ttdRLZ+znnfpxopDDOMmRK7hSYHt/7S9g6dHdmFPhDmecK2IbamXaQfgp2IM1Gk0L0S8Ew0WNuwHwoRKbIzMAssFzQ+m6oIinh0vAQ6Qg9G2eZB6O6+5LaLBEKYdio7ZVJkmRPKp8jpqhQak5H6tFb1VSjKaftvEkQ353dL98ggrEnTj3r9dlKHNIwF2Yikg4fpBC/lCFJUlqQg5THmuKioaI+l3YSS11LOhb/KRLvZsUmfQ0n8auUbJ/3TIO8nWseHlZu6kPmO2spz0Tn7tIpn/9IKr8WG+ovuukfsHPrQoj7GJYFvRJHBfkb21AaMOpe42H0x4ynGfqKDtxNRhE+dOjk+Tad8hsF+a0mWHq/2wVfr5WerlR3QSR0eqj6q+23nJ7on9ifh2RlMu6F3/aG/1dCSov9kT2x803Xdojv3SfZ+xE3Wi2Y+N5xpve7fdbrd/BwAA//80m+gpgwoAAA
    objectset.rio.cattle.io/id: ''
    objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
    objectset.rio.cattle.io/owner-name: mk-coredns-deployment
    objectset.rio.cattle.io/owner-namespace: kube-system
  creationTimestamp: '2023-12-14T06:48:12Z'
  generation: 24
  labels:
    k8s-app: kube-dns
    kubernetes.io/name: CoreDNS
    objectset.rio.cattle.io/hash: 3441ca59b0f78528e148de01f0153a2098a760be
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: k3s
    operation: Update
    subresource: status
    time: '2024-02-06T08:36:39Z'
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:objectset.rio.cattle.io/applied: {}
          f:objectset.rio.cattle.io/id: {}
          f:objectset.rio.cattle.io/owner-gvk: {}
          f:objectset.rio.cattle.io/owner-name: {}
          f:objectset.rio.cattle.io/owner-namespace: {}
        f:labels:
          .: {}
          f:k8s-app: {}
          f:kubernetes.io/name: {}
          f:objectset.rio.cattle.io/hash: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:k8s-app: {}
          f:spec:
            f:containers:
              k:{"name":"coredns"}:
                .: {}
                f:args: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:livenessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":53,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":53,"protocol":"UDP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":9153,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:readinessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:memory: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:securityContext:
                  .: {}
                  f:allowPrivilegeEscalation: {}
                  f:capabilities:
                    .: {}
                    f:add: {}
                    f:drop: {}
                  f:readOnlyRootFilesystem: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/etc/coredns"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/etc/coredns/custom"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/etc/hostsCustom"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
            f:dnsPolicy: {}
            f:nodeSelector: {}
            f:priorityClassName: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:tolerations: {}
            f:topologySpreadConstraints:
              .: {}
              k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"DoNotSchedule"}:
                .: {}
                f:labelSelector: {}
                f:maxSkew: {}
                f:topologyKey: {}
                f:whenUnsatisfiable: {}
            f:volumes:
              .: {}
              k:{"name":"config-volume"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:items: {}
                  f:name: {}
                f:name: {}
              k:{"name":"custom-config-volume"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                  f:optional: {}
                f:name: {}
              k:{"name":"custom-hosts"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
    manager: deploy@mediakind-k3s
    operation: Update
    time: '2024-02-06T13:27:51Z'
  name: coredns
  namespace: kube-system
  resourceVersion: '8614507'
  uid: 2c4ba868-6df6-474c-be7e-898807ab993d
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: rancher/mirrored-coredns-coredns:1.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/hostsCustom
          name: custom-hosts
          readOnly: true
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
        - mountPath: /etc/coredns/custom
          name: custom-config-volume
          readOnly: true
      dnsPolicy: Default
      nodeSelector:
        beta.kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: coredns
      serviceAccountName: coredns
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            k8s-app: kube-dns
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
      volumes:
      - hostPath:
          path: /etc/hosts
          type: File
        name: custom-hosts
      - configMap:
          defaultMode: 420
          items:
          - key: Corefile
            path: Corefile
          - key: NodeHosts
            path: NodeHosts
          name: coredns
        name: config-volume
      - configMap:
          defaultMode: 420
          name: coredns-custom
          optional: true
        name: custom-config-volume
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: '2023-12-14T06:48:24Z'
    lastUpdateTime: '2023-12-14T06:48:24Z'
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: 'True'
    type: Available
  - lastTransitionTime: '2023-12-14T06:48:24Z'
    lastUpdateTime: '2023-12-14T06:48:36Z'
    message: ReplicaSet "coredns-6f69f5c4cc" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: 'True'
    type: Progressing
  observedGeneration: 24
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
