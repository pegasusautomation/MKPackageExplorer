data:
  spec:
    template:
      $patch: replace
      metadata:
        annotations:
          checksum/token-secret: 97e4dee4c5bf933e20c1506b0e7deb682227ecae042211e5ae3b7932965c4641
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: mk-deps
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: etcd
          helm.sh/chart: etcd-8.5.10
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: mk-deps
                    app.kubernetes.io/name: etcd
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - command:
          - etcd
          - --config-file
          - /opt/mediakind/etcd/etcd.conf.yaml
          env:
          - name: BITNAMI_DEBUG
            value: 'false'
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_STS_NAME
            value: etcd-controller1
          - name: ETCDCTL_API
            value: '3'
          - name: ETCD_ON_K8S
            value: 'yes'
          - name: ETCD_START_FROM_SNAPSHOT
            value: 'no'
          - name: ETCD_DISASTER_RECOVERY
            value: 'no'
          - name: ETCD_NAME
            value: $(MY_POD_NAME)
          - name: ETCD_DATA_DIR
            value: /bitnami/etcd/data
          - name: ETCD_LOG_LEVEL
            value: info
          - name: ALLOW_NONE_AUTHENTICATION
            value: 'yes'
          - name: ETCD_AUTH_TOKEN
            value: jwt,priv-key=/opt/bitnami/etcd/certs/token/jwt-token.pem,sign-method=RS256,ttl=10m
          - name: ETCD_ADVERTISE_CLIENT_URLS
            value: http://$(MY_POD_NAME).etcd-controller1-headless.mediakind.svc.cluster.local:2379,http://etcd-controller1.mediakind.svc.cluster.local:2379
          - name: ETCD_LISTEN_CLIENT_URLS
            value: http://0.0.0.0:2379
          - name: ETCD_INITIAL_ADVERTISE_PEER_URLS
            value: http://$(MY_POD_NAME).etcd-controller1-headless.mediakind.svc.cluster.local:2380
          - name: ETCD_LISTEN_PEER_URLS
            value: http://0.0.0.0:2380
          - name: ETCD_CLUSTER_DOMAIN
            value: etcd-controller1-headless.mediakind.svc.cluster.local
          - name: ETCD_ENABLE_V2
            value: 'True'
          image: packages.mediakind.com/mpd-docker/bitnami/etcd:3.5.6-debian-11-r0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /opt/bitnami/scripts/etcd/healthcheck.sh
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: etcd
          ports:
          - containerPort: 2379
            hostPort: 2379
            name: client
            protocol: TCP
          - containerPort: 2380
            name: peer
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /opt/bitnami/scripts/etcd/healthcheck.sh
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/etcd
            name: data
          - mountPath: /opt/bitnami/etcd/certs/token/
            name: etcd-jwt-token
            readOnly: true
          - mountPath: /opt/mediakind/etcd/etcd.conf.yaml
            name: etcd-server-config
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - "echo \"initContainer 'etcd-init-operations' started\"\necho \"setting\
            \ data dir owner and group\"\nchown -R 1001:1001 /bitnami/etcd\nif [ $?\
            \ -ne 0 ]; then\n  echo \"a problem occured setting data dir owner and\
            \ group, will exit\"\n  exit 1\nfi\n/opt/bitnami/etcd/conf/delete-data-dir-contents.sh\n\
            if [ $? -ne 0 ]; then\n  echo \"a error occured running script 'delete-data-dir-contents.sh',\
            \ will exit\"\n  exit 1\nfi\nif [[ ${MY_POD_NAME} == etcd-arbiter-0 ]];\
            \ then\n  /opt/bitnami/etcd/conf/add-member-arbiter.sh\n  script=\"add-member-arbiter.sh\"\
            \nelse\n  /opt/bitnami/etcd/conf/add-member-controller1-2.sh\n  script=\"\
            add-member-controller1-2.sh\"\nfi\nif [ $? -ne 0 ]; then\n  echo \"a error\
            \ occured running script '${script}', will exit\"\n  exit 1\nfi\necho\
            \ \"initContainer 'etcd-init-operations' completed (all scripts ran)\"\
            \n"
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: packages.mediakind.com/mpd-docker/bitnami/etcd:3.5.6-debian-11-r0
          imagePullPolicy: IfNotPresent
          name: etcd-init-operations
          resources: {}
          securityContext:
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/bitnami/etcd/conf/delete-data-dir-contents.sh
            name: etcd-init-operations
            subPath: delete-data-dir-contents.sh
          - mountPath: /opt/bitnami/etcd/conf/add-member-arbiter.sh
            name: etcd-init-operations
            subPath: add-member-arbiter.sh
          - mountPath: /opt/bitnami/etcd/conf/add-member-controller1-2.sh
            name: etcd-init-operations
            subPath: add-member-controller1-2.sh
          - mountPath: /bitnami/etcd
            name: data
          - mountPath: /var/mediakind/state/etcd/is-initialised
            name: etcd-first-time-run
          - mountPath: /opt/mediakind/etcd/etcd.conf.yaml
            name: etcd-server-config
          - mountPath: /tmp
            name: tmp
        priorityClassName: controller-highest-priority
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 30
        volumes:
        - name: etcd-jwt-token
          secret:
            defaultMode: 256
            secretName: etcd-controller1-jwt-token
        - configMap:
            defaultMode: 493
            name: etcd-init-operations
          name: etcd-init-operations
        - hostPath:
            path: /var/mediakind/state/etcd/is-initialised
            type: DirectoryOrCreate
          name: etcd-first-time-run
        - hostPath:
            path: /opt/mediakind/etcd/etcd.conf.yaml
            type: File
          name: etcd-server-config
        - emptyDir: {}
          name: tmp
metadata:
  annotations:
    meta.helm.sh/release-name: mk-deps
    meta.helm.sh/release-namespace: mediakind
  creationTimestamp: '2023-12-14T06:57:25Z'
  labels:
    app.kubernetes.io/instance: mk-deps
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: etcd
    controller.kubernetes.io/hash: 5f6bb4586d
    helm.sh/chart: etcd-8.5.10
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data: {}
      f:metadata:
        f:annotations:
          .: {}
          f:meta.helm.sh/release-name: {}
          f:meta.helm.sh/release-namespace: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/name: {}
          f:controller.kubernetes.io/hash: {}
          f:helm.sh/chart: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"82b0a361-d605-41b3-9e6e-efcf9e6b7909"}: {}
      f:revision: {}
    manager: k3s
    operation: Update
    time: '2023-12-14T06:57:25Z'
  name: etcd-controller1-5f6bb4586d
  namespace: mediakind
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: etcd-controller1
    uid: 82b0a361-d605-41b3-9e6e-efcf9e6b7909
  resourceVersion: '1300'
  uid: 043ef2ac-7c2e-4076-9249-59b63d81e6f2
revision: 2
