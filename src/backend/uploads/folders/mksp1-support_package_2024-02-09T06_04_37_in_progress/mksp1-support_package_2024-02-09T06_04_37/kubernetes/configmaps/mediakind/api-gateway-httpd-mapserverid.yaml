data:
  mapserverid.py: "import urllib.request\nimport time\nimport json\n\nBASE_FILEPATH=\"\
    /etc/mediakind/httpd/\"\nURL='http://server-api:8001/api/servers?fields=settings'\n\
    \n\ndef get_server_settings():\n    response = urllib.request.urlopen(URL)\n \
    \   data = response.read().decode(\"utf-8\")\n    return json.loads(data)\n\n\n\
    def generate_mapping_files():\n    server_settings = get_server_settings()\n \
    \   generate_proxy_mapping(server_settings)\n    generate_license_mapping(server_settings)\n\
    \n\ndef generate_proxy_mapping(server_settings):\n    mapping_data = []\n    for\
    \ server in server_settings:\n        if \"managementIpAddress\" in server[\"\
    settings\"].keys():\n            mapping_data.append(\"%s %s:8080\" % (server[\"\
    serverId\"], server[\"settings\"][\"managementIpAddress\"]))\n    with open(BASE_FILEPATH\
    \ + \"serverid_mapping.cfg\", \"w\") as fh:\n        fh.write(\"\\n\".join(mapping_data))\n\
    \n\ndef generate_license_mapping(server_settings):\n    mapping_data = []\n  \
    \  for server in server_settings:\n        if \"managementIpAddress\" in server[\"\
    settings\"].keys():\n            service_types = server[\"supportedServiceTypes\"\
    ]\n            if \"licensing\" not in service_types:\n                continue\n\
    \            \n            license_port = 8080 if \"controller\" in service_types\
    \ else 8097\n            mapping_data.append(\"%s %s:%s\" % (server[\"serverId\"\
    ], server[\"settings\"][\"managementIpAddress\"], license_port))\n\n    with open(BASE_FILEPATH\
    \ + \"serverid_license_mapping.cfg\", \"w\") as fh:\n        fh.write(\"\\n\"\
    .join(mapping_data))\n\n\nif __name__ == \"__main__\":\n    while True:\n    \
    \    try:\n            generate_mapping_files()\n        except (urllib.error.HTTPError,\
    \ urllib.error.URLError):\n            pass\n        time.sleep(10)\n"
metadata:
  annotations:
    meta.helm.sh/release-name: mkc
    meta.helm.sh/release-namespace: mediakind
  creationTimestamp: '2023-12-14T10:09:17Z'
  labels:
    app.kubernetes.io/component: api-gateway
    app.kubernetes.io/instance: mkc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/part-of: mkc
    app.kubernetes.io/version: 1.29.21
    helm.sh/chart: api-gateway-1.29.21
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data:
        .: {}
        f:mapserverid.py: {}
      f:metadata:
        f:annotations:
          .: {}
          f:meta.helm.sh/release-name: {}
          f:meta.helm.sh/release-namespace: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/component: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/name: {}
          f:app.kubernetes.io/part-of: {}
          f:app.kubernetes.io/version: {}
          f:helm.sh/chart: {}
    manager: helm
    operation: Update
    time: '2023-12-14T10:09:17Z'
  name: api-gateway-httpd-mapserverid
  namespace: mediakind
  resourceVersion: '18821'
  uid: b6bda82c-6db3-4773-a0fd-3c1c3e9f0759
