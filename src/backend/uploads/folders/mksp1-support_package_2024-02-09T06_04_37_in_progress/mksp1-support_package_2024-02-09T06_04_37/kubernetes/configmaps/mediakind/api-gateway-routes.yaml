data:
  02_alarmApiProxy.conf: '# Alarms service


    RewriteRule "^/api/alarms(.*)$" "http://alarm:8099/api/alarms$1" [L,P]

    '
  03_commandApiProxy.conf: '# Command-api service


    # Set in deployment. Should be the server_id the k3s is running on. Technically
    the "localhost" analog

    PassEnv LOCAL_SERVER_ID




    # If the server_id that comes before "/command" in the URI is this server then
    use the in-cluster address

    RewriteCond %{REQUEST_URI} ^/api/services/.*?/servers/(.*?)/command$

    RewriteCond %1::%{ENV:LOCAL_SERVER_ID} ^(.*?)::\1$

    RewriteRule "^/api/services/(.*)/servers/(.*)/command$" "http://command:8003/api/services/$1/servers/$2/command"
    [L,P]


    # If server_id is in servermap then use that address

    # RewriteMap servermap txt:/etc/mediakind/api-gateway/serverid_mapping.cfg

    RewriteCond %{REQUEST_URI} ^/api/services/.*?/servers/(.*?)/command$

    RewriteCond ${servermap:%1} !^$

    RewriteRule "^/api/services/(.*)/servers/(.*)/command$" "http://${servermap:%1}/api/services/$1/servers/$2/command"
    [L,P]


    # fallback

    RewriteRule "^/api/services/(.*)/servers/(.*)/command$" "http://command:8003/api/services/$1/servers/$2/command"
    [L,P]

    '
  04_statApiProxy.conf: '# Statistics service


    # Set in deployment. Should be the server_id the k3s is running on. Technically
    the "localhost" analog

    PassEnv LOCAL_SERVER_ID




    # If the serverId that comes in the query is this server then use the in-cluster
    address

    RewriteCond %{QUERY_STRING} ^.*?serverId=(.*?)(?:&.*)?$

    RewriteCond %1::%{ENV:LOCAL_SERVER_ID} ^(.*?)::\1$

    RewriteRule "^/api/statistics(.*)$" http://statistic:8000/api/statistics$1?%{QUERY_STRING}
    [L,P]


    # If serverId is in servermap then use that address

    # RewriteMap servermap txt:/etc/mediakind/api-gateway/serverid_mapping.cfg

    RewriteCond %{QUERY_STRING} ^.*?serverId=(.*?)(?:&.*)?$

    RewriteCond %1::%{ENV:LOCAL_SERVER_ID} !^(.*?)::\1$

    RewriteCond ${servermap:%1} !^$

    RewriteRule "^/api/statistics(.*)$" http://${servermap:%1}/api/statistics$1?%{QUERY_STRING}
    [L,P]


    # fallback

    RewriteRule "^/api/statistics(.*)$" http://statistic:8000/api/statistics$1 [L,P]

    '
  06_solutionManagerBackendApiProxy.conf: 'RewriteRule "^/api/v1.0(.*)$" "http://sm-backend:80/api/v1.0$1"
    [L,P]

    '
  51_flowApiProxy.conf: '# Flow API


    RewriteRule "^/api/flow(/?.*)$" "http://flow:8013/api/flow$1" [L,P]

    '
  51_nmosApiProxy.conf: '# nmos API


    RewriteRule "^/api/nmos(/?.*)$" "http://nmos:8014/api/nmos$1" [L,P]

    '
  51_serverApiProxy.conf: '# Server API


    RewriteRule "^/api/servers(/?.*)$" "http://server-api:8001/api/servers$1" [L,P]

    RewriteRule "^/api/server(/?.*)$" "http://server-api:8001/api/server$1" [L,P]

    '
  52_serviceApiProxy.conf: '# Services API


    RewriteRule "^/api/services(/?.*)$" "http://service-api:8002/api/services$1" [L,P]

    RewriteRule "^/api/assign/services(/?.*)$" "http://service-api:8002/api/assign/services$1"
    [L,P]

    '
  53_templateApiProxy.conf: '# Template API


    RewriteRule "^/api/templates(/?.*)$" "http://template-api:8004/api/templates$1"
    [L,P]

    '
  54_supportGenProxy.conf: '# Support package generator API


    RewriteRule "^/api/support(/?.*)$" "http://support-package:8062/api/support$1"
    [L,P]

    '
  55_solutionManagerDaemonProxy.conf: 'RewriteRule "^/api/solution_manager_daemon(/?.*)$"
    "http://sm-backend:80/api/solution_manager_daemon$1" [L,P]

    '
  56_failover-api_proxy.conf: 'RewriteRule "^/api/failover(/?.*)$" "http://failover-api:8006/api/failover$1"
    [L,P]

    '
  61_license-manager_proxy.conf: '# If the query string specifies a serverId, proxy
    the request to that server.

    RewriteMap licenseservermap txt:/etc/mediakind/httpd/serverid_license_mapping.cfg

    RewriteCond %{QUERY_STRING} ^.*?serverId=([^&]*)&?.*$


    # The specified server must be in the server map.

    RewriteCond ${licenseservermap:%1} !^$

    RewriteRule "^/api/license(/?.*)$" "http://${licenseservermap:%1}/api/license$1?"
    [L,P]


    # Fallback

    RewriteRule "^/api/license(/?.*)$" "http://license-manager:8097/api/license$1"
    [L,P]

    '
  69_snmp-notification_proxy.conf: '# SNMP Notification Generator


    RewriteRule "^/api/snmp/notification(/?.*)$" "http://snmp-notification:8008/api/snmp/notification$1"
    [L,P]

    '
  70_esam-proxy_proxy.conf: '# ESAM Proxy


    RewriteRule "^/api/esam(/?.*)$" "http://esam-proxy:8010/api/esam$1" [L,P]

    '
  71_controller-metrics-exporter_proxy.conf: '# controller-metrics-exporter


    RewriteRule "^/api/metrics(/?.*)$" "http://controller-metrics-exporter:8015/api/metrics$1"
    [L,P]

    '
  90_prometheusProxy.conf: 'RedirectMatch ^/prometheus$ /prometheus/

    AllowEncodedSlashes On

    ProxyPass        /prometheus/    http://kps-prometheus:9090/prometheus/

    ProxyPassReverse /prometheus/    http://kps-prometheus:9090/prometheus/

    '
  91_rabbitMqProxy.conf: 'RedirectMatch ^/rabbitmq$ /rabbitmq/

    AllowEncodedSlashes On

    ProxyPass        /rabbitmq/api http://rabbitmq-ha:15672/api nocanon

    ProxyPass        /rabbitmq/    http://rabbitmq-ha:15672/

    ProxyPassReverse /rabbitmq/    http://rabbitmq-ha:15672/

    '
  92_kibanaProxy.conf: "<Location /kibana>\n    ProxyPass http://kibana:5601\n   \
    \ ProxyPassReverse http://kibana:5601\n</Location>\n"
  93_grafanaProxy.conf: "<Location /grafana>\n    ProxyPass http://metrics-grafana:80\n\
    \    ProxyPassReverse http://metrics-grafana:80\n</Location>\n"
  99_unifiedUiProxy.conf: '# Unified UI


    RewriteCond %{REQUEST_URI} ^/stomp/

    RewriteCond %{HTTP:UPGRADE} ^WebSocket$ [NC]

    RewriteRule /stomp/ ws://unified-ui:8889/stomp/ [P]


    RewriteCond %{REQUEST_URI} ^/ui.*

    RewriteCond %{REQUEST_URI} !^/ui/static.*

    RewriteRule "^/ui(/?.*)$" "http://unified-ui:8888/ui$1" [L,P]

    RedirectMatch ^/$ /ui/home/

    ProxyPassReverse /ui http://unified-ui:8888/ui


    RewriteCond %{REQUEST_URI} ^/o/.*

    RewriteRule "^/o(/?.*)$" "http://unified-ui:8888/o$1" [L,P]

    ProxyPassReverse /o http://unified-ui:8888/o


    RewriteCond %{REQUEST_URI} ^/api/external-links/?.*

    RewriteRule "^/api/external-links(/?.*)$" "http://unified-ui:8888/api/external-links$1"
    [L,P]

    ProxyPassReverse /api/external-links http://unified-ui:8888/api/external-link


    RewriteCond %{REQUEST_URI} ^/api/backup/?.*

    RewriteRule "^/api/backup(/?.*)$" "http://unified-ui:8888/api/backup$1" [L,P]

    ProxyPassReverse /api/backup http://unified-ui:8888/api/backup


    RewriteCond %{REQUEST_URI} ^/api/restore/?.*

    RewriteRule "^/api/restore(/?.*)$" "http://unified-ui:8888/api/restore$1" [L,P]

    ProxyPassReverse /api/restore http://unified-ui:8888/api/restore

    '
metadata:
  annotations:
    meta.helm.sh/release-name: mkc
    meta.helm.sh/release-namespace: mediakind
  creationTimestamp: '2023-12-14T10:09:17Z'
  labels:
    app.kubernetes.io/component: api-gateway
    app.kubernetes.io/instance: mkc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/part-of: mkc
    app.kubernetes.io/version: 1.29.21
    helm.sh/chart: api-gateway-1.29.21
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data:
        .: {}
        f:02_alarmApiProxy.conf: {}
        f:03_commandApiProxy.conf: {}
        f:04_statApiProxy.conf: {}
        f:06_solutionManagerBackendApiProxy.conf: {}
        f:51_flowApiProxy.conf: {}
        f:51_nmosApiProxy.conf: {}
        f:51_serverApiProxy.conf: {}
        f:52_serviceApiProxy.conf: {}
        f:53_templateApiProxy.conf: {}
        f:54_supportGenProxy.conf: {}
        f:55_solutionManagerDaemonProxy.conf: {}
        f:56_failover-api_proxy.conf: {}
        f:61_license-manager_proxy.conf: {}
        f:69_snmp-notification_proxy.conf: {}
        f:70_esam-proxy_proxy.conf: {}
        f:71_controller-metrics-exporter_proxy.conf: {}
        f:90_prometheusProxy.conf: {}
        f:91_rabbitMqProxy.conf: {}
        f:92_kibanaProxy.conf: {}
        f:93_grafanaProxy.conf: {}
        f:99_unifiedUiProxy.conf: {}
      f:metadata:
        f:annotations:
          .: {}
          f:meta.helm.sh/release-name: {}
          f:meta.helm.sh/release-namespace: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/component: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/name: {}
          f:app.kubernetes.io/part-of: {}
          f:app.kubernetes.io/version: {}
          f:helm.sh/chart: {}
    manager: helm
    operation: Update
    time: '2023-12-14T10:09:17Z'
  name: api-gateway-routes
  namespace: mediakind
  resourceVersion: '18814'
  uid: 8eabc146-9452-46e5-9f48-e36ebe0835df
