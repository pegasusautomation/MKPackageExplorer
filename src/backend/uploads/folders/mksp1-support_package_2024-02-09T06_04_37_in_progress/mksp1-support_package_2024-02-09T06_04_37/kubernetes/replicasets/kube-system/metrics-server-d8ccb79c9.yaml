metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: '1'
    deployment.kubernetes.io/max-replicas: '2'
    deployment.kubernetes.io/revision: '1'
    objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xVTVPkNhD9K6k+24PNZ3AVBwpIditZMhVILlschNTDKCNLSnd7lgnl/55qGchssSzJVm5tdevp9esPP4DJ/nck9ilCByZn3lm3UMHKRwcdnGMOadNjFKigRzHOiIHuAUyMSYz4FFk/0+0faIVRZuTTzBqRgDOfdryCQPWqP32KSPXdegUdrPZ4y7Nuq+9+8tGdnDqX4psQ0fQInVIkb7lmpDVS7bbpvw3A2VhFWQ23WPOGBXsYKwjmFkNJc/U91ybnFw99BX1peAkdYNvg7v4Btnu4f2iOdg/ssXPO7S+O8XZ373jR7h8dHe0vnL73xVxgOn+FIme0SpAxoJVEavdG7PLnt7mPYwWCfQ5GsNzbKvO/SP1Vwlu0bIpifERi6D4+gKE7NaCuLZLUztPJjvQZKqhrRjsQ1jmRnLTN7kFTTjXdgFJnwgUSoauNc4TMtWwy8sn7KEjRhPfz6uL+2XyXWAq3bYiBsY7JYc1iZODyUgmY6NeEnMKgnX3SHjDcVOB7c6f5kYl2ibTTe6KkHD5PuFs3s8OZDk/wa4zIPKd0WyRdGB8GwuslIS9TcNDtVbAUyT+iqD8b0SbZ0Yt/QQWFU1ciGCpgu8Si8Lvr6/mVCuujF2/COQazuUKbomPoDpsKMpJP7vmobSrgwVpk3nq8rUB8j2mQfwK/0nfKZirccx3nhWCpz/O9J7aZkiSbAnRwfTaH8aYCQuP8NymiNzffLslLRXb/gyDaCgNZLANA+OeALMW2eYAO2qbpy1rsE22gg6Pmgy/TVHrYy+YsRcH7ko8JIX2ak1/7gHd4wdaEsj2hW5jAOEn0SwybX1OSH3zAx9nuhAb1DvGUL1NU72dnvzGSFqJpxgrWKQw9fkhDfKxXr+b8Ucppwh6LJX3WuYPxRuuTyadCOBjmyyliIjCNiiUv3pqgwiOtvcVTaxX78pWWkRSQnn4PHx9ghSrQ2SNMWems2erizBqpKwsu7r0KPFYPgIsFWi34ZbqyS3RD0CmeYAolSgFnOtMUUZB11Wp3Ugp1Dibi/4rcG5Zpy7+EvHnSfcoU+yybc68bePyS2uM4/h0AAP//zhrFjHUHAAA
    objectset.rio.cattle.io/id: ''
    objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
    objectset.rio.cattle.io/owner-name: metrics-server-deployment
    objectset.rio.cattle.io/owner-namespace: kube-system
  creationTimestamp: '2023-12-14T06:48:24Z'
  generation: 1
  labels:
    k8s-app: metrics-server
    pod-template-hash: d8ccb79c9
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deployment.kubernetes.io/desired-replicas: {}
          f:deployment.kubernetes.io/max-replicas: {}
          f:deployment.kubernetes.io/revision: {}
          f:objectset.rio.cattle.io/applied: {}
          f:objectset.rio.cattle.io/id: {}
          f:objectset.rio.cattle.io/owner-gvk: {}
          f:objectset.rio.cattle.io/owner-name: {}
          f:objectset.rio.cattle.io/owner-namespace: {}
        f:labels:
          .: {}
          f:k8s-app: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"d0d9648d-9b63-4190-8a4b-829d5d034ff1"}: {}
      f:spec:
        f:replicas: {}
        f:selector: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:k8s-app: {}
              f:pod-template-hash: {}
            f:name: {}
          f:spec:
            f:containers:
              k:{"name":"metrics-server"}:
                .: {}
                f:args: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:livenessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":10250,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:readinessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:securityContext:
                  .: {}
                  f:allowPrivilegeEscalation: {}
                  f:readOnlyRootFilesystem: {}
                  f:runAsNonRoot: {}
                  f:runAsUser: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/tmp"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:dnsPolicy: {}
            f:priorityClassName: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:tolerations: {}
            f:volumes:
              .: {}
              k:{"name":"tmp-dir"}:
                .: {}
                f:emptyDir: {}
                f:name: {}
    manager: k3s
    operation: Update
    time: '2023-12-14T06:48:24Z'
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:availableReplicas: {}
        f:fullyLabeledReplicas: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
    manager: k3s
    operation: Update
    subresource: status
    time: '2024-02-06T13:28:52Z'
  name: metrics-server-d8ccb79c9
  namespace: kube-system
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: metrics-server
    uid: d0d9648d-9b63-4190-8a4b-829d5d034ff1
  resourceVersion: '8615030'
  uid: 2bb4cfe4-733d-4382-b425-1a6310b04862
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: metrics-server
      pod-template-hash: d8ccb79c9
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: metrics-server
        pod-template-hash: d8ccb79c9
      name: metrics-server
    spec:
      containers:
      - args:
        - --cert-dir=/tmp
        - --secure-port=10250
        - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
        - --kubelet-use-node-status-port
        - --metric-resolution=15s
        image: rancher/mirrored-metrics-server:v0.6.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /livez
            port: https
            scheme: HTTPS
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: metrics-server
        ports:
        - containerPort: 10250
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: https
            scheme: HTTPS
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp
          name: tmp-dir
      dnsPolicy: ClusterFirst
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: metrics-server
      serviceAccountName: metrics-server
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp-dir
status:
  availableReplicas: 1
  fullyLabeledReplicas: 1
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
