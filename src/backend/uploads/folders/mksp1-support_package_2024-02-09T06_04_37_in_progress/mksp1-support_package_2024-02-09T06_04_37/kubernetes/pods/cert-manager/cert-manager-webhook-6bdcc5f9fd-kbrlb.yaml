metadata:
  creationTimestamp: '2023-12-14T06:56:52Z'
  generateName: cert-manager-webhook-6bdcc5f9fd-
  labels:
    app: webhook
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: webhook
    app.kubernetes.io/version: v1.5.3
    helm.sh/chart: cert-manager-v1.5.3
    pod-template-hash: 6bdcc5f9fd
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:generateName: {}
        f:labels:
          .: {}
          f:app: {}
          f:app.kubernetes.io/component: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/name: {}
          f:app.kubernetes.io/version: {}
          f:helm.sh/chart: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"8fdcc86e-7d8b-452d-b8c5-f0b6947e8dd0"}: {}
      f:spec:
        f:containers:
          k:{"name":"cert-manager"}:
            .: {}
            f:args: {}
            f:env:
              .: {}
              k:{"name":"POD_NAMESPACE"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:livenessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":10250,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:readinessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext:
          .: {}
          f:runAsNonRoot: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
    manager: k3s
    operation: Update
    time: '2023-12-14T06:56:52Z'
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.42.0.164"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: k3s
    operation: Update
    subresource: status
    time: '2024-02-06T13:28:47Z'
  name: cert-manager-webhook-6bdcc5f9fd-kbrlb
  namespace: cert-manager
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: cert-manager-webhook-6bdcc5f9fd
    uid: 8fdcc86e-7d8b-452d-b8c5-f0b6947e8dd0
  resourceVersion: '8614951'
  uid: fac31431-0b95-46d8-a6ba-81b1dcdff7b3
spec:
  containers:
  - args:
    - --v=2
    - --secure-port=10250
    - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
    - --dynamic-serving-ca-secret-name=cert-manager-webhook-ca
    - --dynamic-serving-dns-names=cert-manager-webhook,cert-manager-webhook.cert-manager,cert-manager-webhook.cert-manager.svc
    env:
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    image: packages.mediakind.com/mpd-docker/jetstack/cert-manager-webhook:v1.5.3
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /livez
        port: 6080
        scheme: HTTP
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: cert-manager
    ports:
    - containerPort: 10250
      name: https
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 6080
        scheme: HTTP
      initialDelaySeconds: 5
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-bkzdz
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: mediakind-k3s
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    runAsNonRoot: true
  serviceAccount: cert-manager-webhook
  serviceAccountName: cert-manager-webhook
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-bkzdz
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: '2023-12-14T06:56:52Z'
    status: 'True'
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: '2024-02-06T13:28:31Z'
    status: 'True'
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: '2024-02-06T13:28:31Z'
    status: 'True'
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: '2023-12-14T06:56:52Z'
    status: 'True'
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://7b598eb4776a1b3d5d2980ae5a01ef47d96232e429c605c1ac69fb5150733eea
    image: packages.mediakind.com/mpd-docker/jetstack/cert-manager-webhook:v1.5.3
    imageID: sha256:cbb49690db0222a5b316b998f69bd90aa0f6b0088f1056c1df7d0836db5fde1e
    lastState:
      terminated:
        containerID: containerd://4fdd321380ae6719f09cb19bdbe67c064d6024c3038e3c2f5e57b2ccf006152e
        exitCode: 255
        finishedAt: '2024-02-06T13:27:47Z'
        reason: Unknown
        startedAt: '2024-02-06T08:36:08Z'
    name: cert-manager
    ready: true
    restartCount: 11
    started: true
    state:
      running:
        startedAt: '2024-02-06T13:28:23Z'
  hostIP: 192.168.255.1
  phase: Running
  podIP: 10.42.0.164
  podIPs:
  - ip: 10.42.0.164
  qosClass: BestEffort
  startTime: '2023-12-14T06:56:52Z'
