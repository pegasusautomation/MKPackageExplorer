metadata:
  creationTimestamp: '2023-12-14T10:42:03Z'
  generateName: api-gateway-7957b5f6fb-
  labels:
    app.kubernetes.io/component: api-gateway
    app.kubernetes.io/instance: mkc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/part-of: mkc
    app.kubernetes.io/version: 1.29.21
    helm.sh/chart: api-gateway-1.29.21
    pod-template-hash: 7957b5f6fb
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:generateName: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/component: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/name: {}
          f:app.kubernetes.io/part-of: {}
          f:app.kubernetes.io/version: {}
          f:helm.sh/chart: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"6d969930-f71e-45f5-bd1d-2d0f797891ff"}: {}
      f:spec:
        f:containers:
          k:{"name":"httpd"}:
            .: {}
            f:args: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"LOCAL_SERVER_ID"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":8080,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:hostPort: {}
                f:name: {}
                f:protocol: {}
              k:{"containerPort":8443,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:hostPort: {}
                f:name: {}
                f:protocol: {}
            f:resources: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/httpd/conf.d/mediakind"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/httpd/conf.d/mediakind-vhost.conf"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
              k:{"mountPath":"/etc/mediakind/httpd"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/pki/authentication/certs/authentication.crt"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
              k:{"mountPath":"/etc/pki/authentication/private/authentication.key"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
              k:{"mountPath":"/etc/pki/tls/certs/localhost.crt"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
              k:{"mountPath":"/etc/pki/tls/certs/server-chain.crt"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
              k:{"mountPath":"/etc/pki/tls/private/localhost.key"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
          k:{"name":"httpd-mapserverid"}:
            .: {}
            f:command: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/mediakind"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/mediakind/httpd"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:initContainers:
          .: {}
          k:{"name":"httpd-rules-sync"}:
            .: {}
            f:command: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/httpd/conf.d/builtins"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/httpd/conf.d/mediakind"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/httpd/conf.d/workers"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext:
          .: {}
          f:fsGroup: {}
          f:runAsUser: {}
        f:terminationGracePeriodSeconds: {}
        f:volumes:
          .: {}
          k:{"name":"api-certificate"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"api-gateway-route-builtins"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"api-gateway-route-combined"}:
            .: {}
            f:emptyDir: {}
            f:name: {}
          k:{"name":"api-gateway-route-workers"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"httpd-config"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"httpd-mapserverid"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"httpd-servermap"}:
            .: {}
            f:emptyDir: {}
            f:name: {}
          k:{"name":"tls-certificate"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
    manager: k3s
    operation: Update
    time: '2023-12-14T10:42:03Z'
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:initContainerStatuses: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.42.0.170"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: k3s
    operation: Update
    subresource: status
    time: '2024-02-06T13:28:49Z'
  name: api-gateway-7957b5f6fb-bws97
  namespace: mediakind
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: api-gateway-7957b5f6fb
    uid: 6d969930-f71e-45f5-bd1d-2d0f797891ff
  resourceVersion: '8614986'
  uid: 954fc49a-c6e1-48c6-b68c-4e353e7587d8
spec:
  containers:
  - args:
    - -c
    - touch /etc/mediakind/httpd/serverid_mapping.cfg /etc/mediakind/httpd/serverid_license_mapping.cfg;
      /usr/sbin/httpd -D FOREGROUND
    command:
    - /usr/bin/sh
    env:
    - name: LOCAL_SERVER_ID
      value: mksp1
    image: packages.mediakind.com/mpd-docker/mediakind/unified-ui-httpd:1.189.17
    imagePullPolicy: IfNotPresent
    name: httpd
    ports:
    - containerPort: 8080
      hostPort: 8080
      name: http
      protocol: TCP
    - containerPort: 8443
      hostPort: 8443
      name: https
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/pki/authentication/private/authentication.key
      name: api-certificate
      subPath: tls.key
    - mountPath: /etc/pki/authentication/certs/authentication.crt
      name: api-certificate
      subPath: tls.crt
    - mountPath: /etc/pki/tls/private/localhost.key
      name: tls-certificate
      subPath: tls.key
    - mountPath: /etc/pki/tls/certs/localhost.crt
      name: tls-certificate
      subPath: tls.crt
    - mountPath: /etc/pki/tls/certs/server-chain.crt
      name: tls-certificate
      subPath: ca.crt
    - mountPath: /etc/httpd/conf.d/mediakind
      name: api-gateway-route-combined
    - mountPath: /etc/httpd/conf.d/mediakind-vhost.conf
      name: httpd-config
      subPath: mediakind-vhost.conf
    - mountPath: /etc/mediakind/httpd
      name: httpd-servermap
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-nb25p
      readOnly: true
  - command:
    - /usr/bin/python3
    - /etc/mediakind/mapserverid.py
    image: packages.mediakind.com/mpd-docker/mediakind/server-daemon:0.78.2
    imagePullPolicy: IfNotPresent
    name: httpd-mapserverid
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/mediakind
      name: httpd-mapserverid
    - mountPath: /etc/mediakind/httpd
      name: httpd-servermap
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-nb25p
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: false
  initContainers:
  - command:
    - sh
    - -c
    - "cp /etc/httpd/conf.d/builtins/*.conf /etc/httpd/conf.d/mediakind/\nif ls /etc/httpd/conf.d/workers/*.conf\
      \ 1> /dev/null 2>&1; then \n  cp /etc/httpd/conf.d/workers/*.conf /etc/httpd/conf.d/mediakind/\
      \ \nfi\n"
    image: packages.mediakind.com/mpd-docker/mediakind/unified-ui-httpd:1.189.17
    imagePullPolicy: IfNotPresent
    name: httpd-rules-sync
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/httpd/conf.d/workers
      name: api-gateway-route-workers
      readOnly: true
    - mountPath: /etc/httpd/conf.d/builtins
      name: api-gateway-route-builtins
    - mountPath: /etc/httpd/conf.d/mediakind
      name: api-gateway-route-combined
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-nb25p
      readOnly: true
  nodeName: mediakind-k3s
  preemptionPolicy: Never
  priority: 1000000
  priorityClassName: controller-high-priority
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 2
    runAsUser: 2
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 0
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: api-certificate
    secret:
      defaultMode: 420
      secretName: unified-ui-cert-auth
  - name: tls-certificate
    secret:
      defaultMode: 420
      secretName: unified-ui-cert-tls
  - configMap:
      defaultMode: 420
      name: api-gateway-httpd
    name: httpd-config
  - configMap:
      defaultMode: 420
      name: api-gateway-httpd-mapserverid
    name: httpd-mapserverid
  - emptyDir: {}
    name: httpd-servermap
  - hostPath:
      path: /etc/mediakind/controller/httpd_rules
      type: Directory
    name: api-gateway-route-workers
  - configMap:
      defaultMode: 420
      name: api-gateway-routes
    name: api-gateway-route-builtins
  - emptyDir: {}
    name: api-gateway-route-combined
  - name: kube-api-access-nb25p
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: '2024-02-06T13:28:27Z'
    status: 'True'
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: '2024-02-06T13:28:29Z'
    status: 'True'
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: '2024-02-06T13:28:29Z'
    status: 'True'
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: '2023-12-14T10:42:03Z'
    status: 'True'
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://303dff5e3598a8c005d82327f90950ee75c88ebf093bb555a2b9c401436b4c8a
    image: packages.mediakind.com/mpd-docker/mediakind/unified-ui-httpd:1.189.17
    imageID: sha256:c952df7d598b4b660de60589b0efd46ee7237b40f53e57eb57cd21708dab0f24
    lastState:
      terminated:
        containerID: containerd://b4e312e909721a477d925aa87b5c167d031c56c22b7bc2f74e49fb59ca98b10b
        exitCode: 255
        finishedAt: '2024-02-06T13:27:47Z'
        reason: Unknown
        startedAt: '2024-02-06T08:36:00Z'
    name: httpd
    ready: true
    restartCount: 9
    started: true
    state:
      running:
        startedAt: '2024-02-06T13:28:28Z'
  - containerID: containerd://7fdc83dd79a45fa9f57237f2f04d10bf6ac8c26295900329a7a1bd328c4b6cd3
    image: packages.mediakind.com/mpd-docker/mediakind/server-daemon:0.78.2
    imageID: sha256:f1501fa9cc2db71c7f3dc2c0db703ca021459eff589342b93bd9eb1f43ad4d2d
    lastState:
      terminated:
        containerID: containerd://8761b2d2fccbb604936c13d98cd3614642b7b7e95a56c7f4be264ad208994c63
        exitCode: 255
        finishedAt: '2024-02-06T13:27:47Z'
        reason: Unknown
        startedAt: '2024-02-06T08:36:01Z'
    name: httpd-mapserverid
    ready: true
    restartCount: 9
    started: true
    state:
      running:
        startedAt: '2024-02-06T13:28:29Z'
  hostIP: 192.168.255.1
  initContainerStatuses:
  - containerID: containerd://1f9b015f692001e94dbab30c7dd2e2e54badf6d10857d937d2c035d7eab4fe7b
    image: packages.mediakind.com/mpd-docker/mediakind/unified-ui-httpd:1.189.17
    imageID: sha256:c952df7d598b4b660de60589b0efd46ee7237b40f53e57eb57cd21708dab0f24
    lastState: {}
    name: httpd-rules-sync
    ready: true
    restartCount: 9
    state:
      terminated:
        containerID: containerd://1f9b015f692001e94dbab30c7dd2e2e54badf6d10857d937d2c035d7eab4fe7b
        exitCode: 0
        finishedAt: '2024-02-06T13:28:25Z'
        reason: Completed
        startedAt: '2024-02-06T13:28:25Z'
  phase: Running
  podIP: 10.42.0.170
  podIPs:
  - ip: 10.42.0.170
  qosClass: BestEffort
  startTime: '2023-12-14T10:42:03Z'
