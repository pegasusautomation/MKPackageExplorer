metadata:
  creationTimestamp: '2023-12-14T06:56:50Z'
  generateName: keepalived-
  labels:
    app.kubernetes.io/component: keepalived
    app.kubernetes.io/instance: keepalived
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keepalived
    app.kubernetes.io/part-of: mkc
    app.kubernetes.io/version: 1.18.0
    controller-revision-hash: 5f8c85797
    helm.sh/chart: keepalived-1.18.0
    pod-template-generation: '1'
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:generateName: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/component: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/name: {}
          f:app.kubernetes.io/part-of: {}
          f:app.kubernetes.io/version: {}
          f:controller-revision-hash: {}
          f:helm.sh/chart: {}
          f:pod-template-generation: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"d136f3a0-51ae-4e8b-bee5-aae8d4073112"}: {}
      f:spec:
        f:affinity:
          .: {}
          f:nodeAffinity:
            .: {}
            f:requiredDuringSchedulingIgnoredDuringExecution: {}
        f:containers:
          k:{"name":"keepalived"}:
            .: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:securityContext:
              .: {}
              f:capabilities:
                .: {}
                f:add: {}
              f:runAsGroup: {}
              f:runAsUser: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/check_mongo.sh"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
              k:{"mountPath":"/etc/keepalived/keepalived.conf"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
              k:{"mountPath":"/notify_license_manager.sh"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:hostNetwork: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"config"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"scripts"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
    manager: k3s
    operation: Update
    time: '2023-12-14T06:56:50Z'
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"192.168.255.1"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: k3s
    operation: Update
    subresource: status
    time: '2024-01-25T13:22:39Z'
  name: keepalived-f2mhp
  namespace: mediakind
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: DaemonSet
    name: keepalived
    uid: d136f3a0-51ae-4e8b-bee5-aae8d4073112
  resourceVersion: '8614698'
  uid: f27f22f1-832f-462d-85e5-aaa1a1de3a24
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchFields:
          - key: metadata.name
            operator: In
            values:
            - mediakind-k3s
  containers:
  - image: packages.mediakind.com/mpd-docker/mediakind/keepalived:1.18.0
    imagePullPolicy: IfNotPresent
    name: keepalived
    resources: {}
    securityContext:
      capabilities:
        add:
        - NET_ADMIN
        - NET_RAW
      runAsGroup: 0
      runAsUser: 0
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/keepalived/keepalived.conf
      name: config
      subPath: keepalived.conf
    - mountPath: /notify_license_manager.sh
      name: scripts
      subPath: notify_license_manager.sh
    - mountPath: /check_mongo.sh
      name: scripts
      subPath: check_mongo.sh
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-wpbsx
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: false
  hostNetwork: true
  nodeName: mediakind-k3s
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 10
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/disk-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/pid-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/unschedulable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/network-unavailable
    operator: Exists
  volumes:
  - configMap:
      defaultMode: 420
      name: keepalived-config
    name: config
  - configMap:
      defaultMode: 320
      name: keepalived-scripts
    name: scripts
  - name: kube-api-access-wpbsx
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: '2023-12-14T06:56:50Z'
    status: 'True'
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: '2024-02-06T13:28:18Z'
    status: 'True'
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: '2024-02-06T13:28:18Z'
    status: 'True'
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: '2023-12-14T06:56:50Z'
    status: 'True'
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://965deee77ddf676cb17aacac1af3c627ebb8c82b1b36ac6cd1cd3a6a088acc17
    image: packages.mediakind.com/mpd-docker/mediakind/keepalived:1.18.0
    imageID: sha256:98009d432c303e4a6dcbe858f3d0800c8d468e643f2d4beb06b88b6345944c2e
    lastState:
      terminated:
        containerID: containerd://9b682cdb7b4697b9fe0d6f9be4400ceabaa42938c93825aa4a1e6362237fd87e
        exitCode: 255
        finishedAt: '2024-02-06T13:27:47Z'
        reason: Unknown
        startedAt: '2024-02-06T08:35:58Z'
    name: keepalived
    ready: true
    restartCount: 11
    started: true
    state:
      running:
        startedAt: '2024-02-06T13:28:18Z'
  hostIP: 192.168.255.1
  phase: Running
  podIP: 192.168.255.1
  podIPs:
  - ip: 192.168.255.1
  qosClass: BestEffort
  startTime: '2023-12-14T06:56:50Z'
