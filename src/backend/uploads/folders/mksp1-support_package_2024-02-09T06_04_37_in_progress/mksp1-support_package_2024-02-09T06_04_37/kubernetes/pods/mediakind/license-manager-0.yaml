
  - emptyDir: {}
    name: envoy-config
  - configMap:
      defaultMode: 420
      name: license-manager-config
    name: config
  - configMap:
      defaultMode: 420
      name: license-manager-locking
    name: locking-code
  - name: kube-api-access-kkn22
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: '2024-02-06T13:28:20Z'
    status: 'True'
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: '2024-02-06T13:29:17Z'
    status: 'True'
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: '2024-02-06T13:29:17Z'
    status: 'True'
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: '2023-12-14T10:09:17Z'
    status: 'True'
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://d32d3ddd183eadd0d41d13c016a5c78bc518c62f4ad18a532c6208c25311e42a
    image: packages.mediakind.com/mpd-docker/mediakind/license-manager-api:0.94.2
    imageID: sha256:a4972c2ed8622fd3c0bc598a415590eabf91a7c3732eccfba0e87ed87a030aa6
    lastState:
      terminated:
        containerID: containerd://66d0fb4b10a4eb6a39386b360afe8aa1cc1f94b934df4dbe8e17d10598002391
        exitCode: 255
        finishedAt: '2024-02-06T13:27:47Z'
        reason: Unknown
        startedAt: '2024-02-06T08:36:02Z'
    name: license-manager-api
    ready: true
    restartCount: 1061
    started: true
    state:
      running:
        startedAt: '2024-02-06T13:28:22Z'
  - containerID: containerd://a98192218e43b72a25d680b6e58f4912135a2c58d925cdaf945b30c9f03e1856
    image: packages.mediakind.com/mpd-docker/mediakind/license-manager-lserv:0.94.2
    imageID: sha256:e5036c0218f3cfc2c4a9c703dd11e5af2e21e815513ade854951f8595f7dffa0
    lastState:
      terminated:
        containerID: containerd://3ddf2602e47e94c8ac9a80d5856d1a867c645e2735e7b93c61d1200cdc232daa
        exitCode: 255
        finishedAt: '2024-02-06T13:27:47Z'
        reason: Unknown
        startedAt: '2024-02-06T08:36:02Z'
    name: license-manager-lserv
    ready: true
    restartCount: 9
    started: true
    state:
      running:
        startedAt: '2024-02-06T13:28:23Z'
  - containerID: containerd://6732405a2a51773149e92cae7f0e23657fbd2b342d060478a57a0ab7c4a84632
    image: packages.mediakind.com/mpd-docker/envoyproxy/envoy:v1.18.3
    imageID: sha256:33655f17f09318801873b70f89c1596ce38f41f6c074e2343d26e9b425f939ec
    lastState:
      terminated:
        containerID: containerd://3c87c8fc976e5092cf69b143cc60b33fcce3e1d672f071c1f346f472e93a79d5
        exitCode: 255
        finishedAt: '2024-02-06T13:27:47Z'
        reason: Unknown
        startedAt: '2024-02-06T08:36:01Z'
    name: license-manager-proxy
    ready: true
    restartCount: 9
    started: true
    state:
      running:
        startedAt: '2024-02-06T13:28:22Z'
  hostIP: 192.168.255.1
  initContainerStatuses:
  - containerID: containerd://a4d8df2bcf6c2ab5114aadbfb5acebdb9b39895e8cac3eef1b8492801a8b3b46
    image: packages.mediakind.com/mpd-docker/mediakind/license-manager-api:0.94.2
    imageID: sha256:a4972c2ed8622fd3c0bc598a415590eabf91a7c3732eccfba0e87ed87a030aa6
    lastState: {}
    name: license-manager-init
    ready: true
    restartCount: 9
    state:
      terminated:
        containerID: containerd://a4d8df2bcf6c2ab5114aadbfb5acebdb9b39895e8cac3eef1b8492801a8b3b46
        exitCode: 0
        finishedAt: '2024-02-06T13:28:19Z'
        reason: Completed
        startedAt: '2024-02-06T13:28:17Z'
  phase: Running
  podIP: 192.168.255.1
  podIPs:
  - ip: 192.168.255.1
  qosClass: BestEffort
  startTime: '2023-12-14T10:09:18Z'
metadata:
  creationTimestamp: '2023-12-14T10:09:17Z'
  generateName: license-manager-
  labels:
    app.kubernetes.io/component: license-manager
    app.kubernetes.io/instance: mkc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: license-manager
    app.kubernetes.io/part-of: mkc
    app.kubernetes.io/version: 0.94.2
    controller-revision-hash: license-manager-55db486864
    helm.sh/chart: license-manager-0.94.2
    statefulset.kubernetes.io/pod-name: license-manager-0
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:generateName: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/component: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/name: {}
          f:app.kubernetes.io/part-of: {}
          f:app.kubernetes.io/version: {}
          f:controller-revision-hash: {}
          f:helm.sh/chart: {}
          f:statefulset.kubernetes.io/pod-name: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"b597636d-e167-4b13-bf2f-ef155c260a0b"}: {}
      f:spec:
        f:containers:
          k:{"name":"license-manager-api"}:
            .: {}
            f:args: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:livenessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":8097,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:hostPort: {}
                f:name: {}
                f:protocol: {}
            f:readinessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:privileged: {}
              f:runAsGroup: {}
              f:runAsUser: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/opt/ericsson/license-manager/etc/envoy-config"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/opt/ericsson/license-manager/etc/envoy-template/cds_template.yaml"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
              k:{"mountPath":"/opt/ericsson/license-manager/etc/license-manager.ini"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
              k:{"mountPath":"/opt/ericsson/license-manager/etc/logging.json"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
          k:{"name":"license-manager-lserv"}:
            .: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":5093,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:hostPort: {}
                f:name: {}
                f:protocol: {}
            f:readinessProbe:
              .: {}
              f:exec:
                .: {}
                f:command: {}
              f:failureThreshold: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:privileged: {}
              f:runAsGroup: {}
              f:runAsUser: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/opt/ericsson/license-manager/bin/echoid.dat"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
          k:{"name":"license-manager-proxy"}:
            .: {}
            f:args: {}
            f:command: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:livenessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":5092,"protocol":"UDP"}:
                .: {}
                f:containerPort: {}
                f:hostPort: {}
                f:name: {}
                f:protocol: {}
              k:{"containerPort":9901,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:hostPort: {}
                f:name: {}
                f:protocol: {}
            f:readinessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:runAsUser: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/envoy/envoy_config.yaml"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
              k:{"mountPath":"/etc/envoy/runtime-config"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:hostNetwork: {}
        f:hostname: {}
        f:initContainers:
          .: {}
          k:{"name":"license-manager-init"}:
            .: {}
            f:args: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:runAsUser: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/opt/ericsson/license-manager/etc/envoy-config"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/opt/ericsson/license-manager/etc/envoy-template/cds_template.yaml"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
              k:{"mountPath":"/opt/ericsson/license-manager/etc/envoy-template/lds_template.yaml"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
              k:{"mountPath":"/opt/ericsson/license-manager/etc/license-manager.ini"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
              k:{"mountPath":"/opt/ericsson/license-manager/etc/logging.json"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext:
          .: {}
          f:fsGroup: {}
        f:subdomain: {}
        f:terminationGracePeriodSeconds: {}
        f:volumes:
          .: {}
          k:{"name":"config"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"envoy-config"}:
            .: {}
            f:emptyDir: {}
            f:name: {}
          k:{"name":"locking-code"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"probe-volume"}:
            .: {}
            f:emptyDir: {}
            f:name: {}
    manager: k3s
    operation: Update
    time: '2023-12-14T10:09:17Z'
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:initContainerStatuses: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"192.168.255.1"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: k3s
    operation: Update
    subresource: status
    time: '2024-02-06T13:29:17Z'
  name: license-manager-0
  namespace: mediakind
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: license-manager
    uid: b597636d-e167-4b13-bf2f-ef155c260a0b
  resourceVersion: '8615300'
  uid: 70d2955a-fb10-411a-b285-325ddacae47e
spec:
  containers:
  - args:
    - -c
    - while true; do /usr/local/bin/envoy -c /etc/envoy/envoy_config.yaml; done
    command:
    - /bin/bash
    image: packages.mediakind.com/mpd-docker/envoyproxy/envoy:v1.18.3
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /
        port: envoy-admin
        scheme: HTTP
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: license-manager-proxy
    ports:
    - containerPort: 5092
      hostPort: 5092
      name: envoy-proxy
      protocol: UDP
    - containerPort: 9901
      hostPort: 9901
      name: envoy-admin
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /ready
        port: envoy-admin
        scheme: HTTP
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      runAsUser: 2
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/envoy/envoy_config.yaml
      name: config
      subPath: envoy_config.yaml
    - mountPath: /etc/envoy/runtime-config
      name: envoy-config
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-kkn22
      readOnly: true
  - args:
    - /src/ericsson/license/api/app.py
    - --conf
    - /opt/ericsson/license-manager/etc/license-manager.ini
    - --log
    - /opt/ericsson/license-manager/etc/logging.json
    image: packages.mediakind.com/mpd-docker/mediakind/license-manager-api:0.94.2
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /api/liveness
        port: restapi
        scheme: HTTP
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 3
    name: license-manager-api
    ports:
    - containerPort: 8097
      hostPort: 8097
      name: restapi
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /api/readiness
        port: restapi
        scheme: HTTP
      initialDelaySeconds: 20
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 3
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      privileged: true
      runAsGroup: 0
      runAsUser: 0
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /opt/ericsson/license-manager/etc/envoy-config
      name: envoy-config
    - mountPath: /opt/ericsson/license-manager/etc/envoy-template/cds_template.yaml
      name: config
      subPath: cds_template.yaml
    - mountPath: /opt/ericsson/license-manager/etc/license-manager.ini
      name: config
      subPath: license-manager.ini
    - mountPath: /opt/ericsson/license-manager/etc/logging.json
      name: config
      subPath: logging.json
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-kkn22
      readOnly: true
  - image: packages.mediakind.com/mpd-docker/mediakind/license-manager-lserv:0.94.2
    imagePullPolicy: IfNotPresent
    name: license-manager-lserv
    ports:
    - containerPort: 5093
      hostPort: 5093
      name: lserv
      protocol: TCP
    readinessProbe:
      exec:
        command:
        - pgrep
        - lserv
      failureThreshold: 3
      initialDelaySeconds: 20
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      privileged: true
      runAsGroup: 0
      runAsUser: 0
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /opt/ericsson/license-manager/bin/echoid.dat
      name: locking-code
      subPath: echoid.dat
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-kkn22
      readOnly: true
  dnsPolicy: ClusterFirstWithHostNet
  enableServiceLinks: false
  hostNetwork: true
  hostname: license-manager-0
  initContainers:
  - args:
    - /src/ericsson/license/api/app.py
    - --conf
    - /opt/ericsson/license-manager/etc/license-manager.ini
    - --log
    - /opt/ericsson/license-manager/etc/logging.json
    - --init
    image: packages.mediakind.com/mpd-docker/mediakind/license-manager-api:0.94.2
    imagePullPolicy: IfNotPresent
    name: license-manager-init
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      runAsUser: 2
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /opt/ericsson/license-manager/etc/envoy-config
      name: envoy-config
    - mountPath: /opt/ericsson/license-manager/etc/envoy-template/cds_template.yaml
      name: config
      subPath: cds_template.yaml
    - mountPath: /opt/ericsson/license-manager/etc/envoy-template/lds_template.yaml
      name: config
      subPath: lds_template.yaml
    - mountPath: /opt/ericsson/license-manager/etc/license-manager.ini
      name: config
      subPath: license-manager.ini
    - mountPath: /opt/ericsson/license-manager/etc/logging.json
      name: config
      subPath: logging.json
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-kkn22
      readOnly: true
  nodeName: mediakind-k3s
  preemptionPolicy: Never
  priority: 0
  priorityClassName: default
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 2
  serviceAccount: default
  serviceAccountName: default
  subdomain: license-manager-headless
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - emptyDir: {}
    name: probe-volume